{"remainingRequest":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\src\\App.vue","mtime":1622291794605},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621409299939},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1621409312371},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621409299939},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":1621409312369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}