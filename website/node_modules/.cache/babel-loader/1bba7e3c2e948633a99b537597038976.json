{"remainingRequest":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\src\\views\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\src\\views\\main.vue","mtime":1621498408994},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621409299939},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":1621409299614},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621409299939},{"path":"C:\\Users\\s8gorgar\\Documents\\GitHub\\bakeryUX\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":1621409312369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gYXN5bmMgZnVuY3Rpb24gcG9zdERhdGEodXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYWtlcycsIGRhdGEgPSB7fSkgewovLyAgIC8vIERlZmF1bHQgb3B0aW9ucyBhcmUgbWFya2VkIHdpdGggKgovLyAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7Ci8vICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSAvLyBib2R5IGRhdGEgdHlwZSBtdXN0IG1hdGNoICJDb250ZW50LVR5cGUiIGhlYWRlcgovLyAgIH0pOwovLyAgIHJldHVybiByZXNwb25zZS5qc29uKCk7IC8vIHBhcnNlcyBKU09OIHJlc3BvbnNlIGludG8gbmF0aXZlIEphdmFTY3JpcHQgb2JqZWN0cwovLyB9Ci8vIHRoaXMuc3RhZmYgPSBwb3N0RGF0YSgpCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICJIZWxsbyIsCiAgICAgIHN0YWZmOiBbXQogICAgfTsKICB9Cn07"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,OADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAAA;AADA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n      <h1>{{ title }}</h1>\r\n      <p>{{ getCakes }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// async function postData(url = 'http://localhost:3000/cakes', data = {}) {\r\n//   // Default options are marked with *\r\n//   const response = await fetch(url, {\r\n//     body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n//   });\r\n//   return response.json(); // parses JSON response into native JavaScript objects\r\n// }\r\n\r\n// this.staff = postData()\r\n\r\nexport default {\r\n    data: () => ({\r\n        title: \"Hello\",\r\n        staff: []\r\n    }),\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/views"}]}